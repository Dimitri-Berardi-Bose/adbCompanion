#!/bin/bash

# Defining Directories 
homeDirectory="$HOME"
binDirectory="$homeDirectory/bin/"
adbCompanionDir="$binDirectory/adbCompanion/"
adbCompanionSrc="$adbCompanionDir/src/"
adbServices="$adbCompanionDir/services/"

# Defining Commands
update="$adbCompanionSrc/selfUpdate"
initialSetup="$adbCompanionSrc/initialSetup"
envSetup="$adbCompanionSrc/enviromentSetup"
labelNewDevices="$adbCompanionSrc/labelNewDevices"

# Defining Global Variables
deviceID=""
deviceName=""
initialSetupComplete="initialSetupComplete"
devices=$(adb devices | grep -w "device" | cut -c -7)

source $adbCompanionSrc/kv-bash/./kv-bash 

finish()
{
	if [[ $(kvget_system isUpdated) == "true" ]]; then
		$adbCompanionSrc/restoreStash
		kvdel_system isUpdated
	fi
}

trap finish EXIT

if [[ $(kvget_system $initialSetupComplete) != "true" ]]; then
	$initialSetup
fi

setup()
{	
	$envSetup $@
	
	if [[ $? != 0 ]]; then 
		exit
	fi
	
	if [[ $(kvget_system isUpdated) != "true" && $(kvget_system noUpdate) != "true" ]]; then
		$update
		exit
	fi
}

chooseService()
{	
	for i in $adbServices/*' '*; do 
		mv "$i" `echo $i | sed -e 's/ /_/g'` 2>/dev/null
	done
	
	for script in $adbServices/*; do
		services+=($(basename $script))
	done
	
	IFS=$'\n' GLOBIGNORE='*' sortedServices=($(printf '%s\n' ${services[@]} | awk '{ print length($0) " " $0; }' | sort -n | cut -d ' ' -f 2-))
	
	declare -i height=$(( 120+20*(${#services[@]} + 1) ))

	service=$(zenity --height=$height --width=300 --title "Services" --list --text "Choose a Service on $deviceName" --column "Services" "${sortedServices[@]}" 2>/dev/null);
	
	if [[ $service != "" ]]; then
		$adbServices/$service $deviceID
	fi
}

######## Main Script Starts Here #########

setup $@

if [[ $devices == "" ]]; then
	zenity --error --text "No Devices Plugged In" 2>/dev/null
	exit
fi

$labelNewDevices $devices

for line in $devices; do
	if [[ $(kvget $line) != "" ]]; then  
		devlist="${devlist} $(kvget $line)"
	else
		devlist="${devlist} $line"
	fi
done

ans=$(zenity --title "adb shell GUI" --list --text "Choose a Device" --column "Device" $devlist 2>/dev/null);

if [[ $ans != "" ]]; then
	if [[ $(kvget $ans) != "" ]]; then
		deviceID=$(kvget $ans)
		deviceName=$ans
	else
		deviceID=$ans
		deviceName=$ans
	fi
else
	echo "No Device Chosen"
	exit
fi

chooseService


